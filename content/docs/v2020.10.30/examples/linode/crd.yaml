apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app: kubeform
  name: instances.linode.kubeform.com
spec:
  group: linode.kubeform.com
  names:
    kind: Instance
    plural: instances
  scope: ""
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          description: ObjectMeta is metadata that all persisted resources must have,
            which includes all objects users must create.
          properties:
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
            clusterName:
              description: The name of the cluster which the object belongs to. This
                is used to distinguish resources with same name and namespace in different
                clusters. This field is not set anywhere right now and apiserver is
                going to ignore it if set in create or update request.
              type: string
            creationTimestamp:
              description: "CreationTimestamp is a timestamp representing the server
                time when this object was created. It is not guaranteed to be set
                in happens-before order across separate operations. Clients may not
                set this value. It is represented in RFC3339 form and is in UTC. \n
                Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
              format: date-time
              type: string
            deletionGracePeriodSeconds:
              description: Number of seconds allowed for this object to gracefully
                terminate before it will be removed from the system. Only set when
                deletionTimestamp is also set. May only be shortened. Read-only.
              format: int64
              type: integer
            deletionTimestamp:
              description: "DeletionTimestamp is RFC 3339 date and time at which this
                resource will be deleted. This field is set by the server when a graceful
                deletion is requested by the user, and is not directly settable by
                a client. The resource is expected to be deleted (no longer visible
                from resource lists, and not reachable by name) after the time in
                this field, once the finalizers list is empty. As long as the finalizers
                list contains items, deletion is blocked. Once the deletionTimestamp
                is set, this value may not be unset or be set further into the future,
                although it may be shortened or the resource may be deleted prior
                to this time. For example, a user may request that a pod is deleted
                in 30 seconds. The Kubelet will react by sending a graceful termination
                signal to the containers in the pod. After that 30 seconds, the Kubelet
                will send a hard termination signal (SIGKILL) to the container and
                after cleanup, remove the pod from the API. In the presence of network
                partitions, this object may still exist after this timestamp, until
                an administrator or automated process can determine the resource is
                fully terminated. If not set, graceful deletion of the object has
                not been requested. \n Populated by the system when a graceful deletion
                is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
              format: date-time
              type: string
            finalizers:
              description: Must be empty before the object is deleted from the registry.
                Each entry is an identifier for the responsible component that will
                remove the entry from the list. If the deletionTimestamp of the object
                is non-nil, entries in this list can only be removed.
              items:
                type: string
              type: array
            generateName:
              description: "GenerateName is an optional prefix, used by the server,
                to generate a unique name ONLY IF the Name field has not been provided.
                If this field is used, the name returned to the client will be different
                than the name passed. This value will also be combined with a unique
                suffix. The provided value has the same validation rules as the Name
                field, and may be truncated by the length of the suffix required to
                make the value unique on the server. \n If this field is specified
                and the generated name exists, the server will NOT return a 409 -
                instead, it will either return 201 Created or 500 with Reason ServerTimeout
                indicating a unique name could not be found in the time allotted,
                and the client should retry (optionally after the time indicated in
                the Retry-After header). \n Applied only if Name is not specified.
                More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency"
              type: string
            generation:
              description: A sequence number representing a specific generation of
                the desired state. Populated by the system. Read-only.
              format: int64
              type: integer
            initializers:
              description: "An initializer is a controller which enforces some system
                invariant at object creation time. This field is a list of initializers
                that have not yet acted on this object. If nil or empty, this object
                has been completely initialized. Otherwise, the object is considered
                uninitialized and is hidden (in list/watch and get calls) from clients
                that haven't explicitly asked to observe uninitialized objects. \n
                When an object is created, the system will populate this list with
                the current set of initializers. Only privileged users may set or
                modify this list. Once it is empty, it may not be modified further
                by any user. \n DEPRECATED - initializers are an alpha field and will
                be removed in v1.15."
              properties:
                pending:
                  description: Pending is a list of initializers that must execute
                    in order before this object is visible. When the last pending
                    initializer is removed, and no failing result is set, the initializers
                    struct will be set to nil and the object is considered as initialized
                    and visible to all clients.
                  items:
                    description: Initializer is information about an initializer that
                      has not yet completed.
                    properties:
                      name:
                        description: name of the process that is responsible for initializing
                          this object.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                result:
                  description: If result is set with the Failure field, the object
                    will be persisted to storage and then deleted, ensuring that other
                    clients can observe the deletion.
                  properties:
                    apiVersion:
                      description: 'APIVersion defines the versioned schema of this
                        representation of an object. Servers should convert recognized
                        schemas to the latest internal value, and may reject unrecognized
                        values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                      type: string
                    code:
                      description: Suggested HTTP return code for this status, 0 if
                        not set.
                      format: int32
                      type: integer
                    details:
                      description: Extended data associated with the reason.  Each
                        reason may define its own extended details. This field is
                        optional and the data returned is not guaranteed to conform
                        to any schema except that defined by the reason type.
                      properties:
                        causes:
                          description: The Causes array includes more details associated
                            with the StatusReason failure. Not all StatusReasons may
                            provide detailed causes.
                          items:
                            description: StatusCause provides more information about
                              an api.Status failure, including cases when multiple
                              errors are encountered.
                            properties:
                              field:
                                description: "The field of the resource that has caused
                                  this error, as named by its JSON serialization.
                                  May include dot and postfix notation for nested
                                  attributes. Arrays are zero-indexed.  Fields may
                                  appear more than once in an array of causes due
                                  to fields having multiple errors. Optional. \n Examples:
                                  \  \"name\" - the field \"name\" on the current
                                  resource   \"items[0].name\" - the field \"name\"
                                  on the first array entry in \"items\""
                                type: string
                              message:
                                description: A human-readable description of the cause
                                  of the error.  This field may be presented as-is
                                  to a reader.
                                type: string
                              reason:
                                description: A machine-readable description of the
                                  cause of the error. If this value is empty there
                                  is no information available.
                                type: string
                            type: object
                          type: array
                        group:
                          description: The group attribute of the resource associated
                            with the status StatusReason.
                          type: string
                        kind:
                          description: 'The kind attribute of the resource associated
                            with the status StatusReason. On some operations may differ
                            from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: The name attribute of the resource associated
                            with the status StatusReason (when there is a single name
                            which can be described).
                          type: string
                        retryAfterSeconds:
                          description: If specified, the time in seconds before the
                            operation should be retried. Some errors may indicate
                            the client must take an alternate action - for those errors
                            this field may indicate how long to wait before taking
                            the alternate action.
                          format: int32
                          type: integer
                        uid:
                          description: 'UID of the resource. (when there is a single
                            resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                          type: string
                      type: object
                    kind:
                      description: 'Kind is a string value representing the REST resource
                        this object represents. Servers may infer this from the endpoint
                        the client submits requests to. Cannot be updated. In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                      type: string
                    message:
                      description: A human-readable description of the status of this
                        operation.
                      type: string
                    metadata:
                      description: 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                      properties:
                        continue:
                          description: continue may be set if the user set a limit
                            on the number of items returned, and indicates that the
                            server has more data available. The value is opaque and
                            may be used to issue another request to the endpoint that
                            served this list to retrieve the next set of available
                            objects. Continuing a consistent list may not be possible
                            if the server configuration has changed or more than a
                            few minutes have passed. The resourceVersion field returned
                            when using this continue value will be identical to the
                            value in the first response, unless you have received
                            this token from an error message.
                          type: string
                        resourceVersion:
                          description: 'String that identifies the server''s internal
                            version of this object that can be used by clients to
                            determine when objects have changed. Value must be treated
                            as opaque by clients and passed unmodified back to the
                            server. Populated by the system. Read-only. More info:
                            https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        selfLink:
                          description: selfLink is a URL representing this object.
                            Populated by the system. Read-only.
                          type: string
                      type: object
                    reason:
                      description: A machine-readable description of why this operation
                        is in the "Failure" status. If this value is empty there is
                        no information available. A Reason clarifies an HTTP status
                        code but does not override it.
                      type: string
                    status:
                      description: 'Status of the operation. One of: "Success" or
                        "Failure". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
                      type: string
                  type: object
              required:
              - pending
              type: object
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            managedFields:
              description: "ManagedFields maps workflow-id and version to the set
                of fields that are managed by that workflow. This is mostly for internal
                housekeeping, and users typically shouldn't need to set or understand
                this field. A workflow can be the user's name, a controller's name,
                or the name of a specific apply path like \"ci-cd\". The set of fields
                is always in the version that the workflow used when modifying the
                object. \n This field is alpha and can be changed or removed without
                notice."
              items:
                description: ManagedFieldsEntry is a workflow-id, a FieldSet and the
                  group version of the resource that the fieldset applies to.
                properties:
                  apiVersion:
                    description: APIVersion defines the version of this resource that
                      this field set applies to. The format is "group/version" just
                      like the top-level APIVersion field. It is necessary to track
                      the version of a field set because it cannot be automatically
                      converted.
                    type: string
                  fields:
                    additionalProperties: true
                    description: Fields identifies a set of fields.
                    type: object
                  manager:
                    description: Manager is an identifier of the workflow managing
                      these fields.
                    type: string
                  operation:
                    description: Operation is the type of operation which lead to
                      this ManagedFieldsEntry being created. The only valid values
                      for this field are 'Apply' and 'Update'.
                    type: string
                  time:
                    description: Time is timestamp of when these fields were set.
                      It should always be empty if Operation is 'Apply'
                    format: date-time
                    type: string
                type: object
              type: array
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within each name must be unique.
                An empty namespace is equivalent to the \"default\" namespace, but
                \"default\" is the canonical representation. Not all objects are required
                to be scoped to a namespace - the value of this field for those objects
                will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info:
                http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            ownerReferences:
              description: List of objects depended by this object. If ALL objects
                in the list have been deleted, this object will be garbage collected.
                If this object is managed by a controller, then an entry in this list
                will point to this controller, with the controller field set to true.
                There cannot be more than one managing controller.
              items:
                description: OwnerReference contains enough information to let you
                  identify an owning object. An owning object must be in the same
                  namespace as the dependent, or be cluster-scoped, so there is no
                  namespace field.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  blockOwnerDeletion:
                    description: If true, AND if the owner has the "foregroundDeletion"
                      finalizer, then the owner cannot be deleted from the key-value
                      store until this reference is removed. Defaults to false. To
                      set this field, a user needs "delete" permission of the owner,
                      otherwise 422 (Unprocessable Entity) will be returned.
                    type: boolean
                  controller:
                    description: If true, this reference points to the managing controller.
                    type: boolean
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                    type: string
                required:
                - apiVersion
                - kind
                - name
                - uid
                type: object
              type: array
            resourceVersion:
              description: "An opaque value that represents the internal version of
                this object that can be used by clients to determine when objects
                have changed. May be used for optimistic concurrency, change detection,
                and the watch operation on a resource or set of resources. Clients
                must treat these values as opaque and passed unmodified back to the
                server. They may only be valid for a particular resource or set of
                resources. \n Populated by the system. Read-only. Value must be treated
                as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
              type: string
            selfLink:
              description: SelfLink is a URL representing this object. Populated by
                the system. Read-only.
              type: string
            uid:
              description: "UID is the unique in time and space value for this object.
                It is typically generated by the server on successful creation of
                a resource and is not allowed to change on PUT operations. \n Populated
                by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
              type: string
          type: object
        spec:
          properties:
            alerts:
              items:
                properties:
                  cpu:
                    description: The percentage of CPU usage required to trigger an
                      alert. If the average CPU usage over two hours exceeds this
                      value, we'll send you an alert. If this is set to 0, the alert
                      is disabled.
                    type: integer
                  io:
                    description: The amount of disk IO operation per second required
                      to trigger an alert. If the average disk IO over two hours exceeds
                      this value, we'll send you an alert. If set to 0, this alert
                      is disabled.
                    type: integer
                  networkIn:
                    description: The amount of incoming traffic, in Mbit/s, required
                      to trigger an alert. If the average incoming traffic over two
                      hours exceeds this value, we'll send you an alert. If this is
                      set to 0 (zero), the alert is disabled.
                    type: integer
                  networkOut:
                    description: The amount of outbound traffic, in Mbit/s, required
                      to trigger an alert. If the average outbound traffic over two
                      hours exceeds this value, we'll send you an alert. If this is
                      set to 0 (zero), the alert is disabled.
                    type: integer
                  transferQuota:
                    description: The percentage of network transfer that may be used
                      before an alert is triggered. When this value is exceeded, we'll
                      alert you. If this is set to 0 (zero), the alert is disabled.
                    type: integer
                type: object
              maxItems: 1
              type: array
            authorizedKeys:
              description: A list of SSH public keys to deploy for the root user on
                the newly created Linode. Only accepted if 'image' is provided.
              items:
                type: string
              type: array
            authorizedUsers:
              description: A list of Linode usernames. If the usernames have associated
                SSH keys, the keys will be appended to the `root` user's `~/.ssh/authorized_keys`
                file automatically. Only accepted if 'image' is provided.
              items:
                type: string
              type: array
            backupID:
              description: A Backup ID from another Linode's available backups. Your
                User must have read_write access to that Linode, the Backup must have
                a status of successful, and the Linode must be deployed to the same
                region as the Backup. See /linode/instances/{linodeId}/backups for
                a Linode's available backups. This field and the image field are mutually
                exclusive.
              type: integer
            backups:
              description: Information about this Linode's backups status.
              items:
                properties:
                  enabled:
                    description: If this Linode has the Backup service enabled.
                    type: boolean
                  schedule:
                    items:
                      properties:
                        day:
                          description: The day ('Sunday'-'Saturday') of the week that
                            your Linode's weekly Backup is taken. If not set manually,
                            a day will be chosen for you. Backups are taken every
                            day, but backups taken on this day are preferred when
                            selecting backups to retain for a longer period.  If not
                            set manually, then when backups are initially enabled,
                            this may come back as 'Scheduling' until the day is automatically
                            selected.
                          type: string
                        window:
                          description: The window ('W0'-'W22') in which your backups
                            will be taken, in UTC. A backups window is a two-hour
                            span of time in which the backup may occur. For example,
                            'W10' indicates that your backups should be taken between
                            10:00 and 12:00. If you do not choose a backup window,
                            one will be selected for you automatically.  If not set
                            manually, when backups are initially enabled this may
                            come back as Scheduling until the window is automatically
                            selected.
                          type: string
                      type: object
                    maxItems: 1
                    type: array
                type: object
              maxItems: 1
              type: array
            backupsEnabled:
              description: If this field is set to true, the created Linode will automatically
                be enrolled in the Linode Backup service. This will incur an additional
                charge. The cost for the Backup service is dependent on the Type of
                Linode deployed.
              type: boolean
            bootConfigLabel:
              description: The Label of the Instance Config that should be used to
                boot the Linode instance.
              type: string
            config:
              description: Configuration profiles define the VM settings and boot
                behavior of the Linode Instance.
              items:
                properties:
                  comments:
                    description: Optional field for arbitrary User comments on this
                      Config.
                    type: string
                  devices:
                    description: Device sda-sdh can be either a Disk or Volume identified
                      by disk_label or volume_id. Only one type per slot allowed.
                    items:
                      properties:
                        sda:
                          items:
                            properties:
                              diskID:
                                description: The Disk ID to map to this disk slot
                                type: integer
                              diskLabel:
                                description: The `label` of the `disk` to map to this
                                  `device` slot.
                                type: string
                              volumeID:
                                description: The Block Storage volume ID to map to
                                  this disk slot
                                type: integer
                            type: object
                          maxItems: 1
                          type: array
                        sdb:
                          items:
                            properties:
                              diskID:
                                type: integer
                              diskLabel:
                                type: string
                              volumeID:
                                type: integer
                            type: object
                          maxItems: 1
                          type: array
                        sdc:
                          items:
                            properties:
                              diskID:
                                type: integer
                              diskLabel:
                                type: string
                              volumeID:
                                type: integer
                            type: object
                          maxItems: 1
                          type: array
                        sdd:
                          items:
                            properties:
                              diskID:
                                type: integer
                              diskLabel:
                                type: string
                              volumeID:
                                type: integer
                            type: object
                          maxItems: 1
                          type: array
                        sde:
                          items:
                            properties:
                              diskID:
                                type: integer
                              diskLabel:
                                type: string
                              volumeID:
                                type: integer
                            type: object
                          maxItems: 1
                          type: array
                        sdf:
                          items:
                            properties:
                              diskID:
                                type: integer
                              diskLabel:
                                type: string
                              volumeID:
                                type: integer
                            type: object
                          maxItems: 1
                          type: array
                        sdg:
                          items:
                            properties:
                              diskID:
                                type: integer
                              diskLabel:
                                type: string
                              volumeID:
                                type: integer
                            type: object
                          maxItems: 1
                          type: array
                        sdh:
                          items:
                            properties:
                              diskID:
                                type: integer
                              diskLabel:
                                type: string
                              volumeID:
                                type: integer
                            type: object
                          maxItems: 1
                          type: array
                      type: object
                    maxItems: 1
                    type: array
                  helpers:
                    description: Helpers enabled when booting to this Linode Config.
                    items:
                      properties:
                        devtmpfsAutomount:
                          description: Populates the /dev directory early during boot
                            without udev. Defaults to false.
                          type: boolean
                        distro:
                          description: Controls the behavior of the Linode Config's
                            Distribution Helper setting.
                          type: boolean
                        modulesDep:
                          description: Creates a modules dependency file for the Kernel
                            you run.
                          type: boolean
                        network:
                          description: Controls the behavior of the Linode Config's
                            Network Helper setting, used to automatically configure
                            additional IP addresses assigned to this instance.
                          type: boolean
                        updatedbDisabled:
                          description: Disables updatedb cron job to avoid disk thrashing.
                          type: boolean
                      type: object
                    maxItems: 1
                    type: array
                  kernel:
                    description: 'A Kernel ID to boot a Linode with. Default is based
                      on image choice. (examples: linode/latest-64bit, linode/grub2,
                      linode/direct-disk)'
                    type: string
                  label:
                    description: The Config's label for display purposes.  Also used
                      by `boot_config_label`.
                    type: string
                  memoryLimit:
                    description: Defaults to the total RAM of the Linode
                    type: integer
                  rootDevice:
                    description: The root device to boot. The corresponding disk must
                      be attached.
                    type: string
                  runLevel:
                    description: Defines the state of your Linode after booting. Defaults
                      to default.
                    type: string
                  virtMode:
                    description: Controls the virtualization mode. Defaults to paravirt.
                    type: string
                required:
                - label
                type: object
              type: array
            disk:
              items:
                properties:
                  ID:
                    description: The ID of the Disk (for use in Linode Image resources
                      and Linode Instance Config Devices)
                    type: integer
                  authorizedKeys:
                    description: A list of SSH public keys to deploy for the root
                      user on the newly created Linode. Only accepted if 'image' is
                      provided.
                    items:
                      type: string
                    type: array
                  authorizedUsers:
                    description: A list of Linode usernames. If the usernames have
                      associated SSH keys, the keys will be appended to the `root`
                      user's `~/.ssh/authorized_keys` file automatically. Only accepted
                      if 'image' is provided.
                    items:
                      type: string
                    type: array
                  filesystem:
                    description: 'The Disk filesystem can be one of: raw, swap, ext3,
                      ext4, initrd (max 32mb)'
                    type: string
                  image:
                    description: An Image ID to deploy the Disk from. Official Linode
                      Images start with linode/, while your Images start with private/.
                    type: string
                  label:
                    description: The disks label, which acts as an identifier in Terraform.
                    type: string
                  readOnly:
                    description: If true, this Disk is read-only.
                    type: boolean
                  size:
                    description: The size of the Disk in MB.
                    type: integer
                  stackscriptID:
                    description: The StackScript to deploy to the newly created Linode.
                      If provided, 'image' must also be provided, and must be an Image
                      that is compatible with this StackScript.
                    type: integer
                required:
                - label
                - size
                type: object
              type: array
            group:
              description: The display group of the Linode instance.
              type: string
            id:
              type: string
            image:
              description: An Image ID to deploy the Disk from. Official Linode Images
                start with linode/, while your Images start with private/. See /images
                for more information on the Images available for you to use.
              type: string
            ipAddress:
              description: This Linode's Public IPv4 Address. If there are multiple
                public IPv4 addresses on this Instance, an arbitrary address will
                be used for this field.
              type: string
            ipv4:
              description: This Linode's IPv4 Addresses. Each Linode is assigned a
                single public IPv4 address upon creation, and may get a single private
                IPv4 address if needed. You may need to open a support ticket to get
                additional IPv4 addresses.
              items:
                type: string
              type: array
            ipv6:
              description: This Linode's IPv6 SLAAC addresses. This address is specific
                to a Linode, and may not be shared.
              type: string
            label:
              description: The Linode's label is for display purposes only. If no
                label is provided for a Linode, a default will be assigned
              type: string
            privateIP:
              description: If true, the created Linode will have private networking
                enabled, allowing use of the 192.168.128.0/17 network within the Linode's
                region.
              type: boolean
            privateIPAddress:
              description: This Linode's Private IPv4 Address.  The regional private
                IP address range is 192.168.128/17 address shared by all Linode Instances
                in a region.
              type: string
            providerRef:
              description: LocalObjectReference contains enough information to let
                you locate the referenced object inside the same namespace.
              properties:
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    TODO: Add other useful fields. apiVersion, kind, uid?'
                  type: string
              type: object
            region:
              description: This is the location where the Linode was deployed. This
                cannot be changed without opening a support ticket.
              type: string
            secretRef:
              description: LocalObjectReference contains enough information to let
                you locate the referenced object inside the same namespace.
              properties:
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    TODO: Add other useful fields. apiVersion, kind, uid?'
                  type: string
              type: object
            specs:
              items:
                properties:
                  disk:
                    description: The amount of storage space, in GB. this Linode has
                      access to. A typical Linode will divide this space between a
                      primary disk with an image deployed to it, and a swap disk,
                      usually 512 MB. This is the default configuration created when
                      deploying a Linode with an image without specifying disks.
                    type: integer
                  memory:
                    description: The amount of RAM, in MB, this Linode has access
                      to. Typically a Linode will choose to boot with all of its available
                      RAM, but this can be configured in a Config profile.
                    type: integer
                  transfer:
                    description: The amount of network transfer this Linode is allotted
                      each month.
                    type: integer
                  vcpus:
                    description: The number of vcpus this Linode has access to. Typically
                      a Linode will choose to boot with all of its available vcpus,
                      but this can be configured in a Config Profile.
                    type: integer
                type: object
              maxItems: 1
              type: array
            stackscriptID:
              description: The StackScript to deploy to the newly created Linode.
                If provided, 'image' must also be provided, and must be an Image that
                is compatible with this StackScript.
              type: integer
            status:
              description: The status of the instance, indicating the current readiness
                state.
              type: string
            swapSize:
              description: When deploying from an Image, this field is optional with
                a Linode API default of 512mb, otherwise it is ignored. This is used
                to set the swap disk size for the newly-created Linode.
              type: integer
            tags:
              description: An array of tags applied to this object. Tags are for organizational
                purposes only.
              items:
                type: string
              type: array
            type:
              description: The type of instance to be deployed, determining the price
                and size.
              type: string
            watchdogEnabled:
              description: The watchdog, named Lassie, is a Shutdown Watchdog that
                monitors your Linode and will reboot it if it powers off unexpectedly.
                It works by issuing a boot job when your Linode powers off without
                a shutdown job being responsible. To prevent a loop, Lassie will give
                up if there have been more than 5 boot jobs issued within 15 minutes.
              type: boolean
          required:
          - providerRef
          - region
          type: object
        status:
          properties:
            observedGeneration:
              description: Resource generation, which is updated on mutation by the
                API Server.
              format: int64
              type: integer
            output:
              properties:
                alerts:
                  items:
                    properties:
                      cpu:
                        description: The percentage of CPU usage required to trigger
                          an alert. If the average CPU usage over two hours exceeds
                          this value, we'll send you an alert. If this is set to 0,
                          the alert is disabled.
                        type: integer
                      io:
                        description: The amount of disk IO operation per second required
                          to trigger an alert. If the average disk IO over two hours
                          exceeds this value, we'll send you an alert. If set to 0,
                          this alert is disabled.
                        type: integer
                      networkIn:
                        description: The amount of incoming traffic, in Mbit/s, required
                          to trigger an alert. If the average incoming traffic over
                          two hours exceeds this value, we'll send you an alert. If
                          this is set to 0 (zero), the alert is disabled.
                        type: integer
                      networkOut:
                        description: The amount of outbound traffic, in Mbit/s, required
                          to trigger an alert. If the average outbound traffic over
                          two hours exceeds this value, we'll send you an alert. If
                          this is set to 0 (zero), the alert is disabled.
                        type: integer
                      transferQuota:
                        description: The percentage of network transfer that may be
                          used before an alert is triggered. When this value is exceeded,
                          we'll alert you. If this is set to 0 (zero), the alert is
                          disabled.
                        type: integer
                    type: object
                  maxItems: 1
                  type: array
                authorizedKeys:
                  description: A list of SSH public keys to deploy for the root user
                    on the newly created Linode. Only accepted if 'image' is provided.
                  items:
                    type: string
                  type: array
                authorizedUsers:
                  description: A list of Linode usernames. If the usernames have associated
                    SSH keys, the keys will be appended to the `root` user's `~/.ssh/authorized_keys`
                    file automatically. Only accepted if 'image' is provided.
                  items:
                    type: string
                  type: array
                backupID:
                  description: A Backup ID from another Linode's available backups.
                    Your User must have read_write access to that Linode, the Backup
                    must have a status of successful, and the Linode must be deployed
                    to the same region as the Backup. See /linode/instances/{linodeId}/backups
                    for a Linode's available backups. This field and the image field
                    are mutually exclusive.
                  type: integer
                backups:
                  description: Information about this Linode's backups status.
                  items:
                    properties:
                      enabled:
                        description: If this Linode has the Backup service enabled.
                        type: boolean
                      schedule:
                        items:
                          properties:
                            day:
                              description: The day ('Sunday'-'Saturday') of the week
                                that your Linode's weekly Backup is taken. If not
                                set manually, a day will be chosen for you. Backups
                                are taken every day, but backups taken on this day
                                are preferred when selecting backups to retain for
                                a longer period.  If not set manually, then when backups
                                are initially enabled, this may come back as 'Scheduling'
                                until the day is automatically selected.
                              type: string
                            window:
                              description: The window ('W0'-'W22') in which your backups
                                will be taken, in UTC. A backups window is a two-hour
                                span of time in which the backup may occur. For example,
                                'W10' indicates that your backups should be taken
                                between 10:00 and 12:00. If you do not choose a backup
                                window, one will be selected for you automatically.  If
                                not set manually, when backups are initially enabled
                                this may come back as Scheduling until the window
                                is automatically selected.
                              type: string
                          type: object
                        maxItems: 1
                        type: array
                    type: object
                  maxItems: 1
                  type: array
                backupsEnabled:
                  description: If this field is set to true, the created Linode will
                    automatically be enrolled in the Linode Backup service. This will
                    incur an additional charge. The cost for the Backup service is
                    dependent on the Type of Linode deployed.
                  type: boolean
                bootConfigLabel:
                  description: The Label of the Instance Config that should be used
                    to boot the Linode instance.
                  type: string
                config:
                  description: Configuration profiles define the VM settings and boot
                    behavior of the Linode Instance.
                  items:
                    properties:
                      comments:
                        description: Optional field for arbitrary User comments on
                          this Config.
                        type: string
                      devices:
                        description: Device sda-sdh can be either a Disk or Volume
                          identified by disk_label or volume_id. Only one type per
                          slot allowed.
                        items:
                          properties:
                            sda:
                              items:
                                properties:
                                  diskID:
                                    description: The Disk ID to map to this disk slot
                                    type: integer
                                  diskLabel:
                                    description: The `label` of the `disk` to map
                                      to this `device` slot.
                                    type: string
                                  volumeID:
                                    description: The Block Storage volume ID to map
                                      to this disk slot
                                    type: integer
                                type: object
                              maxItems: 1
                              type: array
                            sdb:
                              items:
                                properties:
                                  diskID:
                                    type: integer
                                  diskLabel:
                                    type: string
                                  volumeID:
                                    type: integer
                                type: object
                              maxItems: 1
                              type: array
                            sdc:
                              items:
                                properties:
                                  diskID:
                                    type: integer
                                  diskLabel:
                                    type: string
                                  volumeID:
                                    type: integer
                                type: object
                              maxItems: 1
                              type: array
                            sdd:
                              items:
                                properties:
                                  diskID:
                                    type: integer
                                  diskLabel:
                                    type: string
                                  volumeID:
                                    type: integer
                                type: object
                              maxItems: 1
                              type: array
                            sde:
                              items:
                                properties:
                                  diskID:
                                    type: integer
                                  diskLabel:
                                    type: string
                                  volumeID:
                                    type: integer
                                type: object
                              maxItems: 1
                              type: array
                            sdf:
                              items:
                                properties:
                                  diskID:
                                    type: integer
                                  diskLabel:
                                    type: string
                                  volumeID:
                                    type: integer
                                type: object
                              maxItems: 1
                              type: array
                            sdg:
                              items:
                                properties:
                                  diskID:
                                    type: integer
                                  diskLabel:
                                    type: string
                                  volumeID:
                                    type: integer
                                type: object
                              maxItems: 1
                              type: array
                            sdh:
                              items:
                                properties:
                                  diskID:
                                    type: integer
                                  diskLabel:
                                    type: string
                                  volumeID:
                                    type: integer
                                type: object
                              maxItems: 1
                              type: array
                          type: object
                        maxItems: 1
                        type: array
                      helpers:
                        description: Helpers enabled when booting to this Linode Config.
                        items:
                          properties:
                            devtmpfsAutomount:
                              description: Populates the /dev directory early during
                                boot without udev. Defaults to false.
                              type: boolean
                            distro:
                              description: Controls the behavior of the Linode Config's
                                Distribution Helper setting.
                              type: boolean
                            modulesDep:
                              description: Creates a modules dependency file for the
                                Kernel you run.
                              type: boolean
                            network:
                              description: Controls the behavior of the Linode Config's
                                Network Helper setting, used to automatically configure
                                additional IP addresses assigned to this instance.
                              type: boolean
                            updatedbDisabled:
                              description: Disables updatedb cron job to avoid disk
                                thrashing.
                              type: boolean
                          type: object
                        maxItems: 1
                        type: array
                      kernel:
                        description: 'A Kernel ID to boot a Linode with. Default is
                          based on image choice. (examples: linode/latest-64bit, linode/grub2,
                          linode/direct-disk)'
                        type: string
                      label:
                        description: The Config's label for display purposes.  Also
                          used by `boot_config_label`.
                        type: string
                      memoryLimit:
                        description: Defaults to the total RAM of the Linode
                        type: integer
                      rootDevice:
                        description: The root device to boot. The corresponding disk
                          must be attached.
                        type: string
                      runLevel:
                        description: Defines the state of your Linode after booting.
                          Defaults to default.
                        type: string
                      virtMode:
                        description: Controls the virtualization mode. Defaults to
                          paravirt.
                        type: string
                    required:
                    - label
                    type: object
                  type: array
                disk:
                  items:
                    properties:
                      ID:
                        description: The ID of the Disk (for use in Linode Image resources
                          and Linode Instance Config Devices)
                        type: integer
                      authorizedKeys:
                        description: A list of SSH public keys to deploy for the root
                          user on the newly created Linode. Only accepted if 'image'
                          is provided.
                        items:
                          type: string
                        type: array
                      authorizedUsers:
                        description: A list of Linode usernames. If the usernames
                          have associated SSH keys, the keys will be appended to the
                          `root` user's `~/.ssh/authorized_keys` file automatically.
                          Only accepted if 'image' is provided.
                        items:
                          type: string
                        type: array
                      filesystem:
                        description: 'The Disk filesystem can be one of: raw, swap,
                          ext3, ext4, initrd (max 32mb)'
                        type: string
                      image:
                        description: An Image ID to deploy the Disk from. Official
                          Linode Images start with linode/, while your Images start
                          with private/.
                        type: string
                      label:
                        description: The disks label, which acts as an identifier
                          in Terraform.
                        type: string
                      readOnly:
                        description: If true, this Disk is read-only.
                        type: boolean
                      size:
                        description: The size of the Disk in MB.
                        type: integer
                      stackscriptID:
                        description: The StackScript to deploy to the newly created
                          Linode. If provided, 'image' must also be provided, and
                          must be an Image that is compatible with this StackScript.
                        type: integer
                    required:
                    - label
                    - size
                    type: object
                  type: array
                group:
                  description: The display group of the Linode instance.
                  type: string
                id:
                  type: string
                image:
                  description: An Image ID to deploy the Disk from. Official Linode
                    Images start with linode/, while your Images start with private/.
                    See /images for more information on the Images available for you
                    to use.
                  type: string
                ipAddress:
                  description: This Linode's Public IPv4 Address. If there are multiple
                    public IPv4 addresses on this Instance, an arbitrary address will
                    be used for this field.
                  type: string
                ipv4:
                  description: This Linode's IPv4 Addresses. Each Linode is assigned
                    a single public IPv4 address upon creation, and may get a single
                    private IPv4 address if needed. You may need to open a support
                    ticket to get additional IPv4 addresses.
                  items:
                    type: string
                  type: array
                ipv6:
                  description: This Linode's IPv6 SLAAC addresses. This address is
                    specific to a Linode, and may not be shared.
                  type: string
                label:
                  description: The Linode's label is for display purposes only. If
                    no label is provided for a Linode, a default will be assigned
                  type: string
                privateIP:
                  description: If true, the created Linode will have private networking
                    enabled, allowing use of the 192.168.128.0/17 network within the
                    Linode's region.
                  type: boolean
                privateIPAddress:
                  description: This Linode's Private IPv4 Address.  The regional private
                    IP address range is 192.168.128/17 address shared by all Linode
                    Instances in a region.
                  type: string
                providerRef:
                  description: LocalObjectReference contains enough information to
                    let you locate the referenced object inside the same namespace.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                region:
                  description: This is the location where the Linode was deployed.
                    This cannot be changed without opening a support ticket.
                  type: string
                secretRef:
                  description: LocalObjectReference contains enough information to
                    let you locate the referenced object inside the same namespace.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                specs:
                  items:
                    properties:
                      disk:
                        description: The amount of storage space, in GB. this Linode
                          has access to. A typical Linode will divide this space between
                          a primary disk with an image deployed to it, and a swap
                          disk, usually 512 MB. This is the default configuration
                          created when deploying a Linode with an image without specifying
                          disks.
                        type: integer
                      memory:
                        description: The amount of RAM, in MB, this Linode has access
                          to. Typically a Linode will choose to boot with all of its
                          available RAM, but this can be configured in a Config profile.
                        type: integer
                      transfer:
                        description: The amount of network transfer this Linode is
                          allotted each month.
                        type: integer
                      vcpus:
                        description: The number of vcpus this Linode has access to.
                          Typically a Linode will choose to boot with all of its available
                          vcpus, but this can be configured in a Config Profile.
                        type: integer
                    type: object
                  maxItems: 1
                  type: array
                stackscriptID:
                  description: The StackScript to deploy to the newly created Linode.
                    If provided, 'image' must also be provided, and must be an Image
                    that is compatible with this StackScript.
                  type: integer
                status:
                  description: The status of the instance, indicating the current
                    readiness state.
                  type: string
                swapSize:
                  description: When deploying from an Image, this field is optional
                    with a Linode API default of 512mb, otherwise it is ignored. This
                    is used to set the swap disk size for the newly-created Linode.
                  type: integer
                tags:
                  description: An array of tags applied to this object. Tags are for
                    organizational purposes only.
                  items:
                    type: string
                  type: array
                type:
                  description: The type of instance to be deployed, determining the
                    price and size.
                  type: string
                watchdogEnabled:
                  description: The watchdog, named Lassie, is a Shutdown Watchdog
                    that monitors your Linode and will reboot it if it powers off
                    unexpectedly. It works by issuing a boot job when your Linode
                    powers off without a shutdown job being responsible. To prevent
                    a loop, Lassie will give up if there have been more than 5 boot
                    jobs issued within 15 minutes.
                  type: boolean
              required:
              - providerRef
              - region
              type: object
            state:
              properties:
                lineage:
                  type: string
                serial:
                  format: int64
                  type: integer
                terraform_version:
                  type: string
                version:
                  description: A Number represents a JSON number literal.
                  type: string
              required:
              - lineage
              - serial
              - terraform_version
              - version
              type: object
          type: object
      type: object
  versions:
  - name: v1alpha1
    served: true
    storage: true