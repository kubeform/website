<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Provision and manage any cloud provider resource using Kubernetes CRDs &amp; Terraform</title><link>https://kubeform-v1-hugo.web.app/</link><description>Recent content on Provision and manage any cloud provider resource using Kubernetes CRDs &amp; Terraform</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://kubeform-v1-hugo.web.app/index.xml" rel="self" type="application/rss+xml"/><item><title>Acknowledgement | Kubeform</title><link>https://kubeform-v1-hugo.web.app/docs/v0.0.1/welcome/acknowledgement/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubeform-v1-hugo.web.app/docs/v0.0.1/welcome/acknowledgement/</guid><description> Acknowledgement Many thanks to HashiCorp for the Terraform project.</description></item><item><title>AWS</title><link>https://kubeform-v1-hugo.web.app/docs/v0.0.1/guides/aws/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubeform-v1-hugo.web.app/docs/v0.0.1/guides/aws/</guid><description>AWS This guide will show you how to provision a AWS RDS (Relational Database Service) using Kubeform.
Examples used in this guide can be found here.
Look at the Terraform configuration below:
provider &amp;quot;aws&amp;quot; { access_key = &amp;quot;ACCESS_KEY&amp;quot; region = &amp;quot;us-east-1&amp;quot; secret_key = &amp;quot;SECRET_KEY&amp;quot; } resource &amp;quot;aws_db_instance&amp;quot; &amp;quot;test1&amp;quot; { allocated_storage = 5 engine = &amp;quot;mysql&amp;quot; engine_version = &amp;quot;5.7&amp;quot; instance_class = &amp;quot;db.t2.micro&amp;quot; name = &amp;quot;mydb&amp;quot; parameter_group_name = &amp;quot;default.mysql5.7&amp;quot; password = &amp;quot;foobar1234&amp;quot; storage_type = &amp;quot;gp2&amp;quot; username = &amp;quot;foo&amp;quot; }⏎ This config creates an AWS RDS instance.</description></item><item><title>Azure</title><link>https://kubeform-v1-hugo.web.app/docs/v0.0.1/guides/azure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubeform-v1-hugo.web.app/docs/v0.0.1/guides/azure/</guid><description>Azure This guide will show you how to provision a Azure Redis Cache using Kubeform.
Examples used in this guide can be found here.
Look at the Terraform configuration below:
provider &amp;quot;azurerm&amp;quot; { subscription_id = &amp;quot;Subscription ID&amp;quot; client_id = &amp;quot;Client ID&amp;quot; client_secret = &amp;quot;Client Secret&amp;quot; tenant_id = &amp;quot;Tenant ID&amp;quot; } resource &amp;quot;azurerm_redis_cache&amp;quot; &amp;quot;example&amp;quot; { name = &amp;quot;example-cache&amp;quot; resource_group_name = &amp;quot;dev&amp;quot; location = &amp;quot;East US&amp;quot; capacity = 2 family = &amp;quot;C&amp;quot; sku_name = &amp;quot;Standard&amp;quot; enable_non_ssl_port = false minimum_tls_version = &amp;quot;1.</description></item><item><title>Concepts | Kubeform</title><link>https://kubeform-v1-hugo.web.app/docs/v0.0.1/concepts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubeform-v1-hugo.web.app/docs/v0.0.1/concepts/</guid><description> Concepts Concepts help you to learn about the different parts of the Kubeform and the abstractions it uses.
This concept section is divided into the following modules:
What is Kubeform? Overview provides an introduction to Kubeform. Architecture provides a visual representation of Kubeform architecture. It also provides a brief overview of the components it uses.</description></item><item><title>Contributing | Kubeform</title><link>https://kubeform-v1-hugo.web.app/docs/v0.0.1/welcome/contributing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubeform-v1-hugo.web.app/docs/v0.0.1/welcome/contributing/</guid><description>Contribution Guidelines Want to hack on Kubeform?
AppsCode projects are Apache 2.0 licensed and accept contributions via GitHub pull requests. This document outlines some of the conventions on development workflow, commit message formatting, contact points and other resources to make it easier to get your contribution accepted.
Certificate of Origin By contributing to this project you agree to the Developer Certificate of Origin (DCO). This document was created by the Linux Kernel community and is a simple statement that you, as a contributor, have the legal right to make the contribution.</description></item><item><title>Developer Guide</title><link>https://kubeform-v1-hugo.web.app/docs/v0.0.1/setup/developer-guide/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubeform-v1-hugo.web.app/docs/v0.0.1/setup/developer-guide/overview/</guid><description>New to Kubeform? Please start here.
Development Guide This document is intended to be the canonical source of truth for things like supported toolchain versions for building Kubeform. If you find a requirement that this doc does not capture, please submit an issue on github.
This document is intended to be relative to the branch in which it is found. It is guaranteed that requirements will change over time for the development branch, but release branches of Kubeform should not change.</description></item><item><title>DigitalOcean</title><link>https://kubeform-v1-hugo.web.app/docs/v0.0.1/guides/digitalocean/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubeform-v1-hugo.web.app/docs/v0.0.1/guides/digitalocean/</guid><description>DigitalOcean This guide will show you how to provision a Digitalocean Database Cluster using Kubeform.
Examples used in this guide can be found here.
Look at the Terraform configuration below:
provider &amp;quot;digitalocean&amp;quot; { token = &amp;quot;DigitalOcean Token&amp;quot; } resource &amp;quot;digitalocean_database_cluster&amp;quot; &amp;quot;test1&amp;quot; { engine = &amp;quot;pg&amp;quot; name = &amp;quot;example-cluster&amp;quot; node_count&amp;quot; = 1 region = &amp;quot;nyc1&amp;quot; size = &amp;quot;db-s-1vcpu-1gb&amp;quot; version = &amp;quot;11&amp;quot; }⏎ This config creates a Digitalocean Database Cluster.</description></item><item><title>Google</title><link>https://kubeform-v1-hugo.web.app/docs/v0.0.1/guides/google/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubeform-v1-hugo.web.app/docs/v0.0.1/guides/google/</guid><description>Google This guide will show you how to provision a Google Storage Bucket using Kubeform.
Examples used in this guide can be found here.
Look at the Terraform configuration below:
provider &amp;quot;google&amp;quot; { credentials = &amp;quot;json Credential&amp;quot; project = &amp;quot;Project Name&amp;quot; region = &amp;quot;us-central1&amp;quot; }⏎ resource &amp;quot;google_storage_bucket&amp;quot; &amp;quot;test1&amp;quot; { location = &amp;quot;EU&amp;quot; name = &amp;quot;bucket_test1&amp;quot; website = { main_page_suffix = &amp;quot;index.html&amp;quot; not_found_page = &amp;quot;404.html&amp;quot; } } This config creates a Google Storage Bucket.</description></item><item><title>Guides | Kubeform</title><link>https://kubeform-v1-hugo.web.app/docs/v0.0.1/guides/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubeform-v1-hugo.web.app/docs/v0.0.1/guides/</guid><description>Guides Guides show how to provision different cloud infrastructure using Kubeform. We have divided guides section into the following sub-sections:
Google : This section describes provision different Google Cloud infrastructure using Kubeform. Start learning from here.
AWS : This section describes provision different AWS infrastructure using Kubeform. Start learning from here.
Azure : This section describes provision different Azure infrastructure using Kubeform. Start learning from here.</description></item><item><title>Install | Kubeform</title><link>https://kubeform-v1-hugo.web.app/docs/v0.0.1/setup/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubeform-v1-hugo.web.app/docs/v0.0.1/setup/install/</guid><description>Installation Guide Kubeform controller can be installed via Helm.
Using Helm Kubeform can be installed via Helm using the chart from AppsCode Charts Repository. To install the chart with the release name my-release:
$ helm repo add appscode https://charts.appscode.com/stable/ $ helm repo update $ helm search appscode/kubeform NAME CHART VERSION APP VERSION DESCRIPTION appscode/kubeform v0.1.0 v0.1.0 Kubeform by AppsCode - Build Cloud Infrastructure from Kubernetes $ helm install appscode/kubeform --name kfc --version v0.</description></item><item><title>Kubeform Architecture</title><link>https://kubeform-v1-hugo.web.app/docs/v0.0.1/concepts/what-is-kubeform/architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubeform-v1-hugo.web.app/docs/v0.0.1/concepts/what-is-kubeform/architecture/</guid><description>Kubeform Architecture The following diagram shows how Kubeform creates a resource on a Cloud Provider (GCP, AWS, etc.).
Fig: Kubeform Architecture The Resource Creation Process of Kubeform consists of the following steps:
At first, a user creates a secret with access credentials of the Cloud provider where the resource will be created.
Then, he creates a CRD of the resource that specifies the information of the Cloud Resource.</description></item><item><title>Kubeform Overview</title><link>https://kubeform-v1-hugo.web.app/docs/v0.0.1/concepts/what-is-kubeform/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubeform-v1-hugo.web.app/docs/v0.0.1/concepts/what-is-kubeform/overview/</guid><description>Kubeform Kubeform by AppsCode is a Kubernetes operator for terrafrom. If you need to create a cloud infrastructure from kubernetes to use it with any kubernetes workloads or CRD you might want to create it from kubernetes. Kubeform allows you to create cloud infrastructure from kubernetes. You can just write a CRD for a cloud infrastructure, apply it and Kubeform will create it!
Features Native Kubernetes Support Standard Kubernetes is all you need.</description></item><item><title>Linode</title><link>https://kubeform-v1-hugo.web.app/docs/v0.0.1/guides/linode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubeform-v1-hugo.web.app/docs/v0.0.1/guides/linode/</guid><description>Linode This guide will show you how to provision a Linode Instance using Kubeform.
Examples used in this guide can be found here.
Look at the Terraform configuration below:
provider &amp;quot;linode&amp;quot; { token = &amp;quot;LINODE_API_TOKEN&amp;quot; } resource &amp;quot;linode_instance&amp;quot; &amp;quot;instance-test1&amp;quot; { image = &amp;quot;linode/ubuntu18.04&amp;quot; label = &amp;quot;instance-test1&amp;quot; region = &amp;quot;us-east&amp;quot; root_pass = &amp;quot;password&amp;quot; stackscript_data = { user = &amp;quot;John Doe&amp;quot; } stackscript_id = 553057 } This config creates a Linode Instance.</description></item><item><title>Release</title><link>https://kubeform-v1-hugo.web.app/docs/v0.0.1/setup/developer-guide/release/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubeform-v1-hugo.web.app/docs/v0.0.1/setup/developer-guide/release/</guid><description>Release Process The following steps must be done from a Linux x64 bit machine.
Do a global replacement of tags so that docs point to the next release. Push changes to the release-x branch and apply new tag. Push all the changes to remote repo. Build and push Kubeform docker image:
$ cd ~/go/src/kubeform.dev/kubeform $ make push Now, update the release notes in Github. See previous release notes to get an idea what to include there.</description></item><item><title>Releases | Kubeform</title><link>https://kubeform-v1-hugo.web.app/docs/v0.0.1/welcome/releases/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubeform-v1-hugo.web.app/docs/v0.0.1/welcome/releases/</guid><description> Current Release CHANGELOG-0.1.md</description></item><item><title>Support | Kubeform</title><link>https://kubeform-v1-hugo.web.app/docs/v0.0.1/welcome/support/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubeform-v1-hugo.web.app/docs/v0.0.1/welcome/support/</guid><description>Support If you have found a bug with Kubeform or want to request for new features, please file an issue.</description></item><item><title>Table of Contents | Setup</title><link>https://kubeform-v1-hugo.web.app/docs/v0.0.1/setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubeform-v1-hugo.web.app/docs/v0.0.1/setup/</guid><description> Setup Setup contains instructions for installing the Kubeform and its various components in Kubernetes.
Install Kubeform. Installation instructions for Kubeform. Uninstall Kubeform. Instructions for uninstallating Kubeform. Developer Guide Overview. Outlines everything you need to know from setting up your dev environment to how to build and test Kubeform. Release process. Steps for releasing a new version of Kubeform.</description></item><item><title>Uninstall | Kubeform</title><link>https://kubeform-v1-hugo.web.app/docs/v0.0.1/setup/uninstall/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubeform-v1-hugo.web.app/docs/v0.0.1/setup/uninstall/</guid><description> Uninstall Kubeform To uninstall kubeform installed using helm, use the following command.
$ helm delete kfc If you want to remove the release from the store and make its name free for later use, Then provide the --purge flag:
$ helm delete kfc --purge</description></item><item><title>Welcome | Kubeform</title><link>https://kubeform-v1-hugo.web.app/docs/v0.0.1/welcome/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubeform-v1-hugo.web.app/docs/v0.0.1/welcome/</guid><description>Kubeform Kubeform by AppsCode is a Kubernetes operator for terrafrom. If you need to create a cloud infrastructure from kubernetes to use it with any kubernetes workloads or CRD you might want to create it from kubernetes. Kubeform allows you to create cloud infrastructure from kubernetes. You can just write a CRD for a cloud infrastructure, apply it and Kubeform will create it!
From here you can learn all about Kubeform&amp;rsquo;s architecture and how to deploy and use Kubeform.</description></item></channel></rss>