<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Azure on Provision and manage any cloud provider resource using Kubernetes CRDs &amp; Terraform</title><link>https://kubeform-v1-hugo.web.app/docs/v0.0.1/guides/azure/</link><description>Recent content in Azure on Provision and manage any cloud provider resource using Kubernetes CRDs &amp; Terraform</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://kubeform-v1-hugo.web.app/docs/v0.0.1/guides/azure/index.xml" rel="self" type="application/rss+xml"/><item><title>Azure</title><link>https://kubeform-v1-hugo.web.app/docs/v0.0.1/guides/azure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubeform-v1-hugo.web.app/docs/v0.0.1/guides/azure/</guid><description>Azure This guide will show you how to provision a Azure Redis Cache using Kubeform.
Examples used in this guide can be found here.
Look at the Terraform configuration below:
provider &amp;quot;azurerm&amp;quot; { subscription_id = &amp;quot;Subscription ID&amp;quot; client_id = &amp;quot;Client ID&amp;quot; client_secret = &amp;quot;Client Secret&amp;quot; tenant_id = &amp;quot;Tenant ID&amp;quot; } resource &amp;quot;azurerm_redis_cache&amp;quot; &amp;quot;example&amp;quot; { name = &amp;quot;example-cache&amp;quot; resource_group_name = &amp;quot;dev&amp;quot; location = &amp;quot;East US&amp;quot; capacity = 2 family = &amp;quot;C&amp;quot; sku_name = &amp;quot;Standard&amp;quot; enable_non_ssl_port = false minimum_tls_version = &amp;quot;1.</description></item></channel></rss>